#!/bin/env perl

use strict;
use warnings;
use 5.010;

use Twitter::API;
use DateTime;
use DateTime::Format::Strptime;
use XML::Feed;

my @env_vars = qw[TWITTER_CONS_KEY TWITTER_CONS_SECRET];

if (grep { ! defined $ENV{$_} } @env_vars) {
  die "Please set environment variables: ", join(', ', @env_vars), "\n";
}

my ($username, $search_string, $is_search);

if (@ARGV) {
  if ($ARGV[0] =~ /^@/) {
    $username = shift;
  } else {
    $search_string = shift;
    $is_search = 1;
  }
} else {
  $username = '@davorg';
}

my $twitter = Twitter::API->new_with_traits(
    traits          => [qw/Migration ApiMethods/],
    consumer_key    => $ENV{TWITTER_CONS_KEY},
    consumer_secret => $ENV{TWITTER_CONS_SECRET},
);

my $dp = DateTime::Format::Strptime->new(
  pattern => '%a %b %d %H:%M:%S %z %Y',
);

# You'll save the token and secret in cookie, config file or session database
my($access_token, $access_token_secret) = restore_tokens();
if ($access_token && $access_token_secret) {
  $twitter->access_token($access_token);
  $twitter->access_token_secret($access_token_secret);
} else {
  # The client is not yet authorized: Do it now
  print "Authorize this app at ", $twitter->get_authorization_url,
        " and enter the PIN#\n";

  my $pin = <STDIN>; # wait for input
  chomp $pin;

  my($access_token, $access_token_secret, $user_id, $screen_name) =
    $twitter->request_access_token(verifier => $pin);
  save_tokens($access_token, $access_token_secret); # if necessary
}

my ($title, $link);
if ($is_search) {
  $title = "Search for $search_string on Twitter";
  $link  = "https://twitter.com/search?q=$search_string";
} else {
  $title = "$username on Twitter";
  my $user = $username =~ s/^\@//r;
  $link  = "https://twitter.com/$user";
}

my $atom = XML::Feed->new('Atom');
$atom->title($title);
$atom->link($link);
$atom->modified(DateTime->now);

my $ret;

if ($is_search) {
  $ret = $twitter->search($search_string, { tweet_mode => 'extended' });
  $ret = $ret->{statuses};
} else {
  $ret = $twitter->user_timeline({screen_name => $username}, { tweet_mode => 'extended' });
}

foreach (@$ret) {
  my $entry = XML::Feed::Entry->new('Atom');
  $entry->title($_->{full_text} // $_->{text});
  $entry->link("https://twitter.com/$_->{user}{screen_name}/status/$_->{id_str}");
  $entry->author($_->{user}{name});
  $entry->content($_->{full_text} // $_->{text});
  $entry->modified($dp->parse_datetime($_->{created_at}));
  $atom->add_entry($entry);
}

say $atom->as_xml;

sub restore_tokens {
  return () unless -e "$ENV{HOME}/.twjsonrc";
  open my $tok_fh, '<', "$ENV{HOME}/.twjsonrc" or die $!;
  chomp(my @toks = <$tok_fh>);
  return @toks;
}

sub save_tokens {
  my @toks = @_;

  open my $tok_fh, '>', "$ENV{HOME}/.twjsonrc" or die $!;

  print $tok_fh map { "$_\n" } @toks;
}
